package io.openems.edge.meter.eastron.sdm630;

import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

import io.openems.edge.meter.api.MeterType;

@ObjectClassDefinition(name = "Meter Eastron SDM 630", //
		description = "Implements the Eastron SDM630 meter.")
@interface Config {

	@AttributeDefinition(name = "Component-ID", description = "Unique ID of this Component")
	String id() default "meter0";

	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "";

	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	@AttributeDefinition(name = "Meter-Type", description = "Grid (default), Production, Consumption (Metered)")
	MeterType type() default MeterType.GRID;

	@AttributeDefinition(name = "Is wiring direction reversed?",
			description = "This meter expects the load to be connected at the bottom of the meter; see 7. Wiring Diagram in Series_Manual.pdf "
			+ "In case of GRID and PRODUCTION meter the load = EMS is connected at the bottom and the component (grid, PV, etc.) at top."
			+ "While in case of a consumption meter the load = consumer is a the bottom and the EMS connected at top."
			+ "If according to this, the wiring direction is reversed, it can be flagged here to fix power and energy readings."
	)
	boolean isWiringDirectionReversed() default false;

	@AttributeDefinition(name = "Modbus-ID", description = "ID of Modbus bridge.")
	String modbus_id() default "modbus0";

	@AttributeDefinition(name = "Modbus Unit-ID", description = "The Unit-ID of the Modbus device.")
	int modbusUnitId() default 1;

	@AttributeDefinition(name = "Modbus target filter", description = "This is auto-generated by 'Modbus-ID'.")
	String Modbus_target() default "(enabled=true)";

	String webconsole_configurationFactory_nameHint() default "Meter Eastron SDM 630 [{id}]";
}