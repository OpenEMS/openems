package io.openems.edge.batteryinverter.victron.ro;

import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

import io.openems.edge.common.startstop.StartStopConfig;
import io.openems.edge.ess.api.SinglePhase;

@ObjectClassDefinition(//
		name = "Battery-Inverter Victron RO", //
		description = "Implements the Victron battery inverter (read only).")
public @interface Config {

	@AttributeDefinition(name = "Component-ID", description = "Unique ID of this Component")
	String id() default "batteryInverter0";

	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "Victron Multiplus 2GX ESS";
	
	@AttributeDefinition(name = "Phase", description = "The phase that this Victron ESS is connected to - if single phase.")
	SinglePhase phase() default SinglePhase.L1;
	
	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	@AttributeDefinition(name = "Start/stop behaviour?", description = "Should this Component be forced to start or stop?")
	StartStopConfig startStop() default StartStopConfig.AUTO;

	@AttributeDefinition(name = "Modbus-ID", description = "ID of Modbus bridge.")
	String modbus_id() default "modbus0";
	
	@AttributeDefinition(name = "Modbus Unit-ID", description = "The Unit-ID of the Modbus device. Defaults to '228' for Victron Multiplus 2GX.")
	int modbusUnitId() default 228;
	
	@AttributeDefinition(name = "Threshold for DC PV Feed-In in [W]", description = "DC PV Generation below this threshold will not be fed into grid.")
	int dcFeedInThreshold() default 100;
	
	@AttributeDefinition(name = "Modbus target filter", description = "This is auto-generated by 'Modbus-ID'.")
	String Modbus_target() default "(enabled=true)";

	String webconsole_configurationFactory_nameHint() default "Battery-Inverter Victron RO [{id}]";
}
