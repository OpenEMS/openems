package io.openems.edge.mqtt.component.subscribe;

import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

@ObjectClassDefinition(name = "Mqtt Generic Subscribe", description = "A Generic Subscribe Component.")
@interface GenericSubscribeConfig {

	@AttributeDefinition(name = "Id", description = "Unique ID of this component.")
	String id() default "GenericSubscribe0";

	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "";

	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	@AttributeDefinition(name = "Mqtt-ID", description = "ID of Mqtt bridge.")
	String mqtt_id() default "mqttBridge0";

	@AttributeDefinition(name = "Reference-ID", description = "ID of Referenced OpenEms Component.")
	String referencedComponent_id();

	@AttributeDefinition(name = "Referenced Component Channels", description = "This is auto-generated after first save.")
	String[] channels();

	@AttributeDefinition(name = "Topic", description = "Where to Subscribe the data from.")
	String topic();

	@AttributeDefinition(name = "KeyToChannel Config", description = "Configure here what Channel listens to certain Keywords."
			+ "Each entry should contains a \"key\" word e.g. \"consumption\" and a ChannelId e.g. \"ActivePower\""
			+ " After that each Value of consumption is transferred to ActivePower of the referenced Component.")
	String[] keyToChannel();

	@AttributeDefinition(name = "Referenced Component target filter", description = "This is auto-generated by 'referencedComponent-ID'.")
	String ReferenceComponent_target() default "(enabled=true)";

	@AttributeDefinition(name = "Mqtt target filter", description = "This is auto-generated by 'Modbus-ID'.")
	String Mqtt_target() default "(enabled=true)";

	String webconsole_configurationFactory_nameHint() default "Mqtt Generic Subscribe {id}";
}
