package io.openems.edge.bridge.sml;

import java.io.DataInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Test;
import org.openmuc.jrxtx.DataBits;
import org.openmuc.jrxtx.FlowControl;
import org.openmuc.jrxtx.Parity;
import org.openmuc.jrxtx.SerialPort;
import org.openmuc.jrxtx.StopBits;

import io.openems.common.exceptions.OpenemsException;
import io.openems.common.function.ThrowingRunnable;
import io.openems.common.types.ChannelAddress;
import io.openems.common.types.OpenemsType;
import io.openems.edge.bridge.sml.api.ChannelRecord;
import io.openems.edge.bridge.sml.api.SmlTask;
import io.openems.edge.common.channel.Doc;
import io.openems.edge.common.test.ComponentTest;
import io.openems.edge.meter.api.AsymmetricMeter;
import io.openems.edge.meter.api.MeterType;
import io.openems.edge.meter.api.SymmetricMeter;
import io.openems.edge.common.test.AbstractComponentTest.TestCase;

public class ChannelDataRecordMapperTest {
	private static final String SML_ID = "sml0";
	private static final String DEVICE_ID = "device0";
	private static final int CYCLE_TIME = 700;
//	private static final ChannelAddress SERIAL_NUMBER = new ChannelAddress(DEVICE_ID, "SerialNumber");
//	private static final ChannelAddress DEVICE_IDENTIFICATION = new ChannelAddress(DEVICE_ID, "DeviceIdentification");
	private static final ChannelAddress ACTIVE_CONSUMPTION_ENERGY = new ChannelAddress(DEVICE_ID,
			"ActiveConsumptionEnergy");
//	private static final ChannelAddress CONSUMPTION_ENERGY_TARIF_1 = new ChannelAddress(DEVICE_ID,
//			"ConsumptionEnergyTarif1");
//	private static final ChannelAddress CONSUMPTION_ENERGY_TARIF_2 = new ChannelAddress(DEVICE_ID,
//			"ConsumptionEnergyTarif2");
//	private static final ChannelAddress ACTIVE_PRODUCTION_ENERGY = new ChannelAddress(DEVICE_ID,
//			"ActiveProductionEnergy");
//	private static final ChannelAddress PRODUCTION_ENERGY_TARIF_1 = new ChannelAddress(DEVICE_ID,
//			"ProductionEnergyTarif1");
//	private static final ChannelAddress PRODUCTION_ENERGY_TARIF_2 = new ChannelAddress(DEVICE_ID,
//			"ProductionEnergyTarif2");
//	private static final ChannelAddress ACTIVE_POWER = new ChannelAddress(DEVICE_ID, "ActivePower");
//	private static final ChannelAddress ACTIVE_POWER_L1 = new ChannelAddress(DEVICE_ID, "ActivePowerL1");
//	private static final ChannelAddress ACTIVE_POWER_L2 = new ChannelAddress(DEVICE_ID, "ActivePowerL2");
//	private static final ChannelAddress ACTIVE_POWER_L3 = new ChannelAddress(DEVICE_ID, "ActivePowerL3");
//	private static final ChannelAddress MANUFACTURER_ID = new ChannelAddress(DEVICE_ID, "ManufacturerId");
//	private static final ChannelAddress PUBLIC_KEY = new ChannelAddress(DEVICE_ID, "PublicKey");

	@Test
	public void test1() throws OpenemsException, Exception {
		final ThrowingRunnable<Exception> sleep = () -> Thread.sleep(CYCLE_TIME);

		/*
		 * Instantiate Modbus-Bridge
		 */

		List<DummySerialPort> testSerialPorts = new ArrayList<DummySerialPort>();
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 30000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				

		var sut = new BridgeSmlSerialImpl();
		MySmlComponent device = new MySmlComponent(DEVICE_ID, sut, 2, testSerialPorts.get(0));
		// device.addChannelDataRecords();
		var test = new ComponentTest(sut) //
				.addComponent(device) //
				.addReference("smlSerialConnection", testSerialPorts.get(0)) //
				.activate(MyConfigSerial.create() //
						.setId(SML_ID) //
						.setPortName("/etc/ttyUSB0") //
						.setBaudRate(9600) //
						.setDatabits(DataBits.DATABITS_8) //
						.setParity(Parity.EVEN) //
						.setStopbits(StopBits.STOPBITS_1) //
						.setFlowControl(FlowControl.NONE) //
						.setTimeout(0)//
						.setInvalidateElementsAfterReadErrors(1) //
						.build());

		/*
		 * Successfully read Register
		 */
		try {
			device.addChannelDataRecords();
			sut.addTask(DEVICE_ID, new SmlTask(sut, device));
			// device.addTask(DEVICE_ID, new SmlTask(sut, device));
			test //
					.next(new TestCase() //
							.onAfterProcessImage(sleep)) //
//					.next(new TestCase() //
//							.onAfterProcessImage(()-> device.activate())) //
					.next(new TestCase() //
							.onAfterProcessImage(sleep) //
							.output(ACTIVE_CONSUMPTION_ENERGY, 10));
			// .output(ACTIVE_CONSUMPTION_ENERGY, 22462413.6));

		} catch (Exception e) {
			// TODO Auto-generated catch block
			// e.printStackTrace();
		}
	}

	@Test
	public void test2() throws OpenemsException, Exception {
		final ThrowingRunnable<Exception> sleep = () -> Thread.sleep(CYCLE_TIME);

		/*
		 * Instantiate Modbus-Bridge
		 */

		List<DummySerialPort> testSerialPorts = new ArrayList<DummySerialPort>();
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 30000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				"1B1B1B1B0101010176050F1A20696200620072630101760101050508B5790B090149534B000403DF630101635A0A0076050F1A206A620062007263070177010B090149534B000403DF63070100620AFFFF7262016507AFF5E27A77078181C78203FF010101010449534B0177070100000009FF010101010B090149534B000403DF630177070100010800FF650000018201621E52FF59000000000D637E0B0177070100010801FF0101621E52FF59000000000D637E0B0177070100010802FF0101621E52FF5900000000000000000177070100100700FF0101621B520055000000A80177070100240700FF0101621B520055000000750177070100380700FF0101621B5200550000001501770701004C0700FF0101621B5200550000001D0177078181C78205FF0101010183020C2DE05C56024E1CD45280F4A0769A95E629CAE205C55C9F1683CA5419778E1D9BCFA1C577A6B36A92709EBF05EA21BD01010163C54E0076050F1A206B62006200726302017101633BBD001B1B1B1B1A004A71"));
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				
		testSerialPorts.add(new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8, Parity.EVEN,
				StopBits.STOPBITS_1, FlowControl.NONE,
				

		var bridge = new BridgeSmlSerialImpl();
		var sut = new MySmlComponent(DEVICE_ID, bridge, 2, testSerialPorts.get(0));
		var field = bridge.getClass().getDeclaredField("smlSerialConnection");
		field.setAccessible(true);
		field.set(bridge, testSerialPorts.get(0));

		var test = new ComponentTest(sut) //
				.activate(MyConfigSerial.create() //
						.setId(DEVICE_ID) //
						.setPortName("/etc/ttyUSB0") //
						.setBaudRate(9600) //
						.setDatabits(DataBits.DATABITS_8) //
						.setParity(Parity.EVEN) //
						.setStopbits(StopBits.STOPBITS_1) //
						.setFlowControl(FlowControl.NONE) //
						.setTimeout(0)//
						.setInvalidateElementsAfterReadErrors(1) //
						.build());

		/*
		 * Successfully read Register
		 */
		try {
			sut.addTask(DEVICE_ID, new SmlTask(bridge, sut));
			test //
					.next(new TestCase() //
							.onAfterProcessImage(sleep)) //
					.next(new TestCase() //
							.onAfterProcessImage(sleep) //
							.output(ACTIVE_CONSUMPTION_ENERGY, 10));
			// .output(ACTIVE_CONSUMPTION_ENERGY, 22462413.6));

		} catch (Exception e) {
			// TODO Auto-generated catch block
			// e.printStackTrace();
		}
	}

	private static class MySmlComponent extends DummySmlComponent implements SymmetricMeter, AsymmetricMeter {
		private DummySerialPort dummySerialPort = new DummySerialPort("/etc/ttyUSB0", 9600, 3000, DataBits.DATABITS_8,
				Parity.EVEN, StopBits.STOPBITS_1, FlowControl.NONE, "");
		private final Map<String, SmlTask> tasks = new HashMap<>();

		private BridgeSmlSerialImpl bridge;

		public MySmlComponent(String id, BridgeSmlSerialImpl bridge, int unitId, DummySerialPort port)
				throws OpenemsException {
			super(id, bridge, unitId, AsymmetricMeter.ChannelId.values(), SymmetricMeter.ChannelId.values(),
					ChannelId.values());
			this.bridge = bridge;
			this.dummySerialPort = port;
		}

		public enum ChannelId implements io.openems.edge.common.channel.ChannelId {
			SERIAL_NUMBER(Doc.of(OpenemsType.STRING)), //
			DEVICE_IDENTIFICATION(Doc.of(OpenemsType.STRING)), //
			CONSUMPTION_ENERGY(Doc.of(OpenemsType.DOUBLE)), //
			CONSUMPTION_ENERGY_TARIF_1(Doc.of(OpenemsType.DOUBLE)),
			CONSUMPTION_ENERGY_TARIF_2(Doc.of(OpenemsType.DOUBLE)), //
			PRODUCTION_ENERGY(Doc.of(OpenemsType.DOUBLE)), //
			PRODUCTION_ENERGY_TARIF_1(Doc.of(OpenemsType.DOUBLE)), //
			PRODUCTION_ENERGY_TARIF_2(Doc.of(OpenemsType.DOUBLE)), //
			TOTAL_POWER(Doc.of(OpenemsType.DOUBLE)), //
			POWER_L1(Doc.of(OpenemsType.DOUBLE)), //
			POWER_L2(Doc.of(OpenemsType.DOUBLE)), //
			POWER_L3(Doc.of(OpenemsType.DOUBLE)), //
			MANUFACTURER_ID(Doc.of(OpenemsType.STRING)), //
			PUBLIC_KEY(Doc.of(OpenemsType.STRING));

			private final Doc doc;

			private ChannelId(Doc doc) {
				this.doc = doc;
			}

			@Override
			public Doc doc() {
				return this.doc;
			}
		}

		@Override
		public SerialPort getSmlConnection() {
			return dummySerialPort;
		}

		@Override
		public void addTask(String sourceId, SmlTask task) {
			this.tasks.put(sourceId, task);
		}

		@Override
		public void removeTask(String sourceId) {
			this.tasks.remove(sourceId);
		}

		@Override
		protected void addChannelDataRecords() {
			try {
				addRecord(ChannelId.SERIAL_NUMBER, "0x01 00 00 00 00 FF"); // 1-0:0.0.1*255
				addRecord(ChannelId.DEVICE_IDENTIFICATION, "0x01 00 01 09 00 FF"); // "1-0:0.0.9*255"
				addRecord(SymmetricMeter.ChannelId.ACTIVE_CONSUMPTION_ENERGY, "0x01 00 01 08 00 FF"); // "1-0:1.8.0*255"
				addRecord(ChannelId.CONSUMPTION_ENERGY_TARIF_1, "0x01 00 01 08 01 FF"); // "1-0:1.8.1*255"
				addRecord(ChannelId.CONSUMPTION_ENERGY_TARIF_2, "0x01 00 01 08 02 FF"); // "1-0:1.8.2*255"
				addRecord(SymmetricMeter.ChannelId.ACTIVE_PRODUCTION_ENERGY, "0x01 00 02 00 00 FF"); // "1-0:2.8.0*255"
				addRecord(ChannelId.PRODUCTION_ENERGY_TARIF_1, "0x01 00 02 00 01 FF"); // "1-0:2.8.1*255"
				addRecord(ChannelId.PRODUCTION_ENERGY_TARIF_2, "0x01 00 02 00 02 FF"); // "1-0:2.8.2*255"
				addRecord(SymmetricMeter.ChannelId.ACTIVE_POWER, "0x01 00 10 07 00 FF"); // "1-0:16.7.0*255"
				addRecord(AsymmetricMeter.ChannelId.ACTIVE_POWER_L1, "0x01 00 10 24 00 FF"); // "1-0:36.7.0*255"
				addRecord(AsymmetricMeter.ChannelId.ACTIVE_POWER_L2, "0x01 00 10 38 00 FF"); // "1-0:56.7.0*255"
				addRecord(AsymmetricMeter.ChannelId.ACTIVE_POWER_L3, "0x01 00 10 4C 00 FF"); // "1-0:76.7.0*255"
				addRecord(ChannelId.MANUFACTURER_ID, "0x81 81 81 82 03 FF"); // "129-129:199.130.3*255"
				addRecord(ChannelId.PUBLIC_KEY, "0x81 81 81 82 05 FF"); // "129-129:199.130.5*255"
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		@Override
		public MeterType getMeterType() {
			return MeterType.GRID;
		}

		private void addRecord(io.openems.edge.common.channel.ChannelId id, String obisCode)
				throws IllegalArgumentException, Exception {
			this.channelDataRecords.add(new ChannelRecord(this.channel(id), obisCode));
		}
	}
}
